name: Deploy to Streamlit Cloud

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 실행
  workflow_dispatch:  # 수동으로 워크플로우 실행 가능

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        env:
          # 테스트 환경에서 사용할 더미 환경 변수 설정
          KIS_APP_KEY: "test_app_key"
          KIS_APP_SECRET: "test_app_secret"
          KIS_ACC_NO: "test_acc_no"
          KIS_MOCK_APP_KEY: "test_mock_app_key"
          KIS_MOCK_APP_SECRET: "test_mock_app_secret"
          KIS_MOCK_ACC_NO: "test_mock_acc_no"
          KIS_USE_MOCK: "true"
          KIS_TOKEN_PATH: "data/test_token.json"
          PYTHONPATH: ${{ github.workspace }}
        run: |
          # 테스트 데이터 디렉토리 생성
          mkdir -p data
          # 테스트 실행
          pytest -xvs tests/  # 테스트 파일이 tests/ 디렉토리에 있다고 가정

  deploy:
    needs: test  # test 작업이 성공적으로 완료된 후에 실행
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Streamlit Cloud Redeployment
        run: |
          # Streamlit Cloud는 GitHub 저장소의 변경을 자동으로 감지하여 재배포합니다.
          # 이 단계는 단순히 배포가 트리거되었음을 로그에 기록합니다.
          echo "Push to main branch detected. Streamlit Cloud redeployment should be triggered automatically."
          
          # 추가적인 배포 단계가 필요한 경우 여기에 추가할 수 있습니다.
          # 예: AWS, GCP, Azure 등에 배포하는 스크립트